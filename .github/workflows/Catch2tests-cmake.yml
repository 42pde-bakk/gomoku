name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: algo

    steps:
    - uses: actions/checkout@v3

    - name: Build gomokubot
      run: make

    - name: Configure CMake
      run: cd tests; cmake -B .;cd -

    - name: Build Tests
      run: cmake --build tests

    - name: Run unit tests
      run: ./tests/Gomokutests.out

    - name: Run integration tests
      run: ./tests/Minimaxtests.out

  macos:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
        working-directory: algo

    steps:
    - uses: actions/checkout@v3

    - name: Build gomokubot
      run: make

    - name: Configure CMake
      run: cd tests; cmake -B .;cd -

    - name: Build Tests
      run: cmake --build tests

    - name: Run unit tests
      run: ./tests/Gomokutests.out

    - name: Run integration tests
      run: ./tests/Minimaxtests.out
